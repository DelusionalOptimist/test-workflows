name: testk8s

on: 
  push: 
     branches: 
      - main
      - master
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: setting up minikube
        uses: manusa/actions-setup-minikube@v2.4.2
        with:
          minikube version: 'v1.16.0'
          kubernetes version: 'v1.19.2'
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: setup meshery config 
        env:
          provider_token: ${{ secrets.PROVIDER_TOKEN }}
        run:  echo $provider_token ;chmod +x ./mesheryconf.sh ;./mesheryconf.sh
        
      - name: Start meshery server using mesheryctl
        run: |
           curl -L https://git.io/meshery | PLATFORM=kubernetes bash -
           sleep 100s
      - name: Try to see if meshery is up
        run: kubectl get pods -n meshery
      - name: start adapter
        run: |
          kubectl apply -f ./.github/meshery-istio-deployment.yaml --namespace=meshery
          kubectl apply -f ./.github/meshery-istio-service.yaml --namespace=meshery
          kubectl apply -f ./.github/meshery-service.yaml --namespace=meshery
      # - name: start tunelling
      #   run: minikube tunnel & 
      - name: wait 10 sec
        run: sleep 10s
      - name: check if pods started
        run: kubectl get pods -n meshery
      - name: reset meshery addr
        run: |
          svcip="http://$(kubectl get svc -n meshery | grep "meshery " | tr -s ' ' | cut -d " " -f 3):9081"
          echo "this is $svcip"
          config='{"contexts":{"local":{"endpoint":'$svcip',"token":"Default","platform":"kubernetes","adapters":[],"channel":"stable","version":"latest"}},"current-context":"local","tokens":[{"location":"auth.json","name":"Default"}]}'
          echo $config  > ~/.meshery/config.yaml
          cat  ~/.meshery/config.yaml
      - name: pattern apply
        run: mesheryctl pattern apply -f ./.github/test.yaml -t ~/auth.json   
      - name: wait 120 sec
        run: sleep 120s
      - name: check adapter logs
        run: |
            podname=$(kubectl get pods -n meshery | grep istio | tr -s ' ' | cut -d " " -f 1)
            kubectl logs pod/$podname -n meshery
      # - name: check logs
      #   run: |
      #       podname=$(kubectl get pods -n meshery | grep istio | tr -s ' ' | cut -d " " -f 1)
      #       kubectl logs pod/$podname -n meshery
      # - name: Get meshery endpoint 
      #   run:  echo "ENDPOINT=$(kubectl get svc -n meshery | grep -w "meshery " |  tr -s ' ' | cut -d " " -f 3 )" >> $GITHUB_ENV
      # - name: Update endpoint in config
      #   run: chmod +x ./configchange.sh; ./configchange.sh
      # - name: Tryna curl
      #   run: curl http://$ENDPOINT:9081/api/oam/workload
      # - name: Setup Go
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: 1.16.x
      # - name: start adapter
      #   run: DEBUG=true MESHERY_SERVER=$ENDPOINT:9081 go run main.go &
      # - name: Install service mesh
      #   run: mesheryctl mesh deploy --adapter meshery-istio --namespace istio-system
      # - name: sleep
      #   run: 100s
      # - name: Check
      #   run: kubectl get pods -n istio-system
      # - name: get the routes
      #   run: ip route

